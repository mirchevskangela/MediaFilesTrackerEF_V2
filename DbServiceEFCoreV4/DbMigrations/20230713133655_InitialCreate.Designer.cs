// <auto-generated />
using System;
using DbServicesEFCore.ModelClass;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbServiceEFCoreV4.DbMigrations
{
    [DbContext(typeof(VideoDetectContext))]
    [Migration("20230713133655_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary.ModelClass.CameraConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CameraName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CameraConfigurations");
                });

            modelBuilder.Entity("ClassLibrary.ModelClass.ConfigurationModificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionsID")
                        .HasColumnType("int");

                    b.Property<string>("CameraName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionsID");

                    b.ToTable("ConfigurationModificationDetails");
                });

            modelBuilder.Entity("ClassLibrary.ModelClass.MonitoringDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActionsID")
                        .HasColumnType("int");

                    b.Property<int>("CameraConfigurationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVideo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionsID");

                    b.HasIndex("CameraConfigurationID");

                    b.ToTable("MonitoringDetails");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.DbServices.PhotoExtension_ConfigurationModificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigurationModificationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("PhotoExtensionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationModificationDetailId");

                    b.HasIndex("PhotoExtensionId");

                    b.ToTable("PhotoExtension_ConfigurationModificationDetail");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.Folder_CameraConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CameraConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CameraConfigurationId");

                    b.HasIndex("FolderId");

                    b.ToTable("Folder_CameraConfiguration");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.Actions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Created");

                    b.HasKey("Id");

                    b.ToTable("Actions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Action = "Created"
                        },
                        new
                        {
                            Id = 4,
                            Action = "Modified"
                        },
                        new
                        {
                            Id = 3,
                            Action = "Deleted"
                        },
                        new
                        {
                            Id = 2,
                            Action = "Added"
                        });
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FolderPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.Folder_ConfigurationModificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigurationModificationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationModificationDetailId");

                    b.HasIndex("FolderId");

                    b.ToTable("Folder_ConfigurationModificationDetail");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.PhotoExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhotoExtensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Extension = "jpg"
                        },
                        new
                        {
                            Id = 2,
                            Extension = "jpeg"
                        },
                        new
                        {
                            Id = 3,
                            Extension = "jfi"
                        },
                        new
                        {
                            Id = 4,
                            Extension = "jpe"
                        },
                        new
                        {
                            Id = 5,
                            Extension = "jif"
                        },
                        new
                        {
                            Id = 6,
                            Extension = "jfif"
                        },
                        new
                        {
                            Id = 7,
                            Extension = "png"
                        },
                        new
                        {
                            Id = 8,
                            Extension = "svg"
                        },
                        new
                        {
                            Id = 9,
                            Extension = "svgz"
                        },
                        new
                        {
                            Id = 10,
                            Extension = "pdf"
                        },
                        new
                        {
                            Id = 11,
                            Extension = "webp"
                        },
                        new
                        {
                            Id = 12,
                            Extension = "tiff"
                        },
                        new
                        {
                            Id = 13,
                            Extension = "tif"
                        },
                        new
                        {
                            Id = 14,
                            Extension = "psd"
                        },
                        new
                        {
                            Id = 15,
                            Extension = "raw"
                        },
                        new
                        {
                            Id = 16,
                            Extension = "arw"
                        },
                        new
                        {
                            Id = 17,
                            Extension = "cr"
                        },
                        new
                        {
                            Id = 18,
                            Extension = "rw2"
                        },
                        new
                        {
                            Id = 19,
                            Extension = "nrw"
                        },
                        new
                        {
                            Id = 20,
                            Extension = "k25"
                        });
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.PhotoExtension_CameraConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CameraConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("PhotoExtensionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CameraConfigurationId");

                    b.HasIndex("PhotoExtensionId");

                    b.ToTable("PhotoExtension_CameraConfiguration");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.VideoExtension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VideoExtensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Extension = "mpg"
                        },
                        new
                        {
                            Id = 2,
                            Extension = "mp2"
                        },
                        new
                        {
                            Id = 3,
                            Extension = "mp3"
                        },
                        new
                        {
                            Id = 4,
                            Extension = "mpeg"
                        },
                        new
                        {
                            Id = 5,
                            Extension = "mpe"
                        },
                        new
                        {
                            Id = 6,
                            Extension = "mpv"
                        },
                        new
                        {
                            Id = 7,
                            Extension = "webm"
                        },
                        new
                        {
                            Id = 8,
                            Extension = "ogg"
                        },
                        new
                        {
                            Id = 9,
                            Extension = "avi"
                        },
                        new
                        {
                            Id = 10,
                            Extension = "wmv"
                        },
                        new
                        {
                            Id = 11,
                            Extension = "avchd"
                        },
                        new
                        {
                            Id = 12,
                            Extension = "avc"
                        },
                        new
                        {
                            Id = 13,
                            Extension = "mp4"
                        },
                        new
                        {
                            Id = 14,
                            Extension = "m4p"
                        });
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.VideoExtension_CameraConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CameraConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("VideoExtensionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CameraConfigurationId");

                    b.HasIndex("VideoExtensionId");

                    b.ToTable("VideoExtension_CameraConfiguration");
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.VideoExtension_ConfigurationModificationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConfigurationModificationDetailId")
                        .HasColumnType("int");

                    b.Property<int>("VideoExtensionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationModificationDetailId");

                    b.HasIndex("VideoExtensionId");

                    b.ToTable("VideoExtension_ConfigurationModificationDetail");
                });

            modelBuilder.Entity("ClassLibrary.ModelClass.ConfigurationModificationDetail", b =>
                {
                    b.HasOne("DbServiceEFCoreV4.ModelClass.Actions", "Actions")
                        .WithMany("ConfigurationModificationDetails")
                        .HasForeignKey("ActionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassLibrary.ModelClass.MonitoringDetail", b =>
                {
                    b.HasOne("DbServiceEFCoreV4.ModelClass.Actions", "Actions")
                        .WithMany("MonitoringDetails")
                        .HasForeignKey("ActionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary.ModelClass.CameraConfiguration", "CameraConfiguration")
                        .WithMany("MonitoringDetails")
                        .HasForeignKey("CameraConfigurationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.DbServices.PhotoExtension_ConfigurationModificationDetail", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.ConfigurationModificationDetail", "ConfigurationModificationDetail")
                        .WithMany("PhotoExtensions")
                        .HasForeignKey("ConfigurationModificationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.PhotoExtension", "PhotoExtension")
                        .WithMany("PhotoExtension_ConfigurationModificationDetail")
                        .HasForeignKey("PhotoExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.Folder_CameraConfiguration", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.CameraConfiguration", "CameraConfiguration")
                        .WithMany("Folders")
                        .HasForeignKey("CameraConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.Folder", "Folder")
                        .WithMany("Folder_CameraConfiguration")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.Folder_ConfigurationModificationDetail", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.ConfigurationModificationDetail", "ConfigurationModificationDetail")
                        .WithMany("Folders")
                        .HasForeignKey("ConfigurationModificationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.Folder", "Folder")
                        .WithMany("Folder_ConfigurationModificationDetail")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.PhotoExtension_CameraConfiguration", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.CameraConfiguration", "CameraConfiguration")
                        .WithMany("PhotoExtensions")
                        .HasForeignKey("CameraConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.PhotoExtension", "PhotoExtension")
                        .WithMany("PhotoExtension_CameraConfiguration")
                        .HasForeignKey("PhotoExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.VideoExtension_CameraConfiguration", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.CameraConfiguration", "CameraConfiguration")
                        .WithMany("VideoExtensions")
                        .HasForeignKey("CameraConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.VideoExtension", "VideoExtension")
                        .WithMany("VideoExtension_CameraConfiguration")
                        .HasForeignKey("VideoExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbServiceEFCoreV4.ModelClass.VideoExtension_ConfigurationModificationDetail", b =>
                {
                    b.HasOne("ClassLibrary.ModelClass.ConfigurationModificationDetail", "ConfigurationModificationDetail")
                        .WithMany("VideoExtensions")
                        .HasForeignKey("ConfigurationModificationDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbServiceEFCoreV4.ModelClass.VideoExtension", "VideoExtension")
                        .WithMany("VideoExtension_ConfigurationModificationDetail")
                        .HasForeignKey("VideoExtensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
